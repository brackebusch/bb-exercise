// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="Body"
      >
        <Header
          changeModalState={[Function]}
        />
        <ModalView
          changeModalState={[Function]}
          error=""
          handleInputChange={[Function]}
          saveAndClose={[Function]}
          setDate={[Function]}
          setError={[Function]}
          showModal={false}
          workOrder={
            Object {
              "cases": "#",
              "coffee": "Choose One",
              "method": "Choose One",
              "notes": "",
              "packets": "25",
              "priority": false,
              "ship_date": "",
            }
          }
        />
        <Table
          changeModalState={[Function]}
          reverse={[Function]}
          workOrders={Array []}
        />
        <Pagination
          bsClass="pagination"
          bsSize="medium"
        >
          <First />
          <PaginationItem
            active={false}
            activeLabel="(current)"
            disabled={false}
            onClick={[Function]}
          >
            Prev
          </PaginationItem>
          <PaginationItem
            active={false}
            activeLabel="(current)"
            disabled={false}
            onClick={[Function]}
          >
            Next
          </PaginationItem>
          <Last />
        </Pagination>
      </div>,
      "className": "App",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            changeModalState={[Function]}
          />,
          <ModalView
            changeModalState={[Function]}
            error=""
            handleInputChange={[Function]}
            saveAndClose={[Function]}
            setDate={[Function]}
            setError={[Function]}
            showModal={false}
            workOrder={
              Object {
                "cases": "#",
                "coffee": "Choose One",
                "method": "Choose One",
                "notes": "",
                "packets": "25",
                "priority": false,
                "ship_date": "",
              }
            }
          />,
          <Table
            changeModalState={[Function]}
            reverse={[Function]}
            workOrders={Array []}
          />,
          <Pagination
            bsClass="pagination"
            bsSize="medium"
          >
            <First />
            <PaginationItem
              active={false}
              activeLabel="(current)"
              disabled={false}
              onClick={[Function]}
            >
              Prev
            </PaginationItem>
            <PaginationItem
              active={false}
              activeLabel="(current)"
              disabled={false}
              onClick={[Function]}
            >
              Next
            </PaginationItem>
            <Last />
          </Pagination>,
        ],
        "className": "Body",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "changeModalState": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "changeModalState": [Function],
            "error": "",
            "handleInputChange": [Function],
            "saveAndClose": [Function],
            "setDate": [Function],
            "setError": [Function],
            "showModal": false,
            "workOrder": Object {
              "cases": "#",
              "coffee": "Choose One",
              "method": "Choose One",
              "notes": "",
              "packets": "25",
              "priority": false,
              "ship_date": "",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "changeModalState": [Function],
            "reverse": [Function],
            "workOrders": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "pagination",
            "bsSize": "medium",
            "children": Array [
              <First />,
              <PaginationItem
                active={false}
                activeLabel="(current)"
                disabled={false}
                onClick={[Function]}
              >
                Prev
              </PaginationItem>,
              Array [],
              <PaginationItem
                active={false}
                activeLabel="(current)"
                disabled={false}
                onClick={[Function]}
              >
                Next
              </PaginationItem>,
              <Last />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "activeLabel": "(current)",
                "children": "Prev",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Prev",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "activeLabel": "(current)",
                "children": "Next",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Next",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="Body"
        >
          <Header
            changeModalState={[Function]}
          />
          <ModalView
            changeModalState={[Function]}
            error=""
            handleInputChange={[Function]}
            saveAndClose={[Function]}
            setDate={[Function]}
            setError={[Function]}
            showModal={false}
            workOrder={
              Object {
                "cases": "#",
                "coffee": "Choose One",
                "method": "Choose One",
                "notes": "",
                "packets": "25",
                "priority": false,
                "ship_date": "",
              }
            }
          />
          <Table
            changeModalState={[Function]}
            reverse={[Function]}
            workOrders={Array []}
          />
          <Pagination
            bsClass="pagination"
            bsSize="medium"
          >
            <First />
            <PaginationItem
              active={false}
              activeLabel="(current)"
              disabled={false}
              onClick={[Function]}
            >
              Prev
            </PaginationItem>
            <PaginationItem
              active={false}
              activeLabel="(current)"
              disabled={false}
              onClick={[Function]}
            >
              Next
            </PaginationItem>
            <Last />
          </Pagination>
        </div>,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Header
              changeModalState={[Function]}
            />,
            <ModalView
              changeModalState={[Function]}
              error=""
              handleInputChange={[Function]}
              saveAndClose={[Function]}
              setDate={[Function]}
              setError={[Function]}
              showModal={false}
              workOrder={
                Object {
                  "cases": "#",
                  "coffee": "Choose One",
                  "method": "Choose One",
                  "notes": "",
                  "packets": "25",
                  "priority": false,
                  "ship_date": "",
                }
              }
            />,
            <Table
              changeModalState={[Function]}
              reverse={[Function]}
              workOrders={Array []}
            />,
            <Pagination
              bsClass="pagination"
              bsSize="medium"
            >
              <First />
              <PaginationItem
                active={false}
                activeLabel="(current)"
                disabled={false}
                onClick={[Function]}
              >
                Prev
              </PaginationItem>
              <PaginationItem
                active={false}
                activeLabel="(current)"
                disabled={false}
                onClick={[Function]}
              >
                Next
              </PaginationItem>
              <Last />
            </Pagination>,
          ],
          "className": "Body",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "changeModalState": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "changeModalState": [Function],
              "error": "",
              "handleInputChange": [Function],
              "saveAndClose": [Function],
              "setDate": [Function],
              "setError": [Function],
              "showModal": false,
              "workOrder": Object {
                "cases": "#",
                "coffee": "Choose One",
                "method": "Choose One",
                "notes": "",
                "packets": "25",
                "priority": false,
                "ship_date": "",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "changeModalState": [Function],
              "reverse": [Function],
              "workOrders": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "pagination",
              "bsSize": "medium",
              "children": Array [
                <First />,
                <PaginationItem
                  active={false}
                  activeLabel="(current)"
                  disabled={false}
                  onClick={[Function]}
                >
                  Prev
                </PaginationItem>,
                Array [],
                <PaginationItem
                  active={false}
                  activeLabel="(current)"
                  disabled={false}
                  onClick={[Function]}
                >
                  Next
                </PaginationItem>,
                <Last />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "activeLabel": "(current)",
                  "children": "Prev",
                  "disabled": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Prev",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "activeLabel": "(current)",
                  "children": "Next",
                  "disabled": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Next",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
